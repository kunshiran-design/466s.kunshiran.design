{
  // Configuration for JavaScript files
  "extends": [
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "overrides": [
    // Configuration for mjs files
    {
      "files": ["**/*.mjs"],
      "parserOptions": {
        "sourceType": "module",
        "ecmaVersion": 2015
      },
      "rules": {
        "import/no-extraneous-dependencies": "off", // mjs is only used by Astro for configuration, false positive
        "import/no-unresolved": "off" // Also false positive with mjs file
      }
    },
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint", "react"],
      "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaVersion": "latest",
        "sourceType": "module"
      },
      "rules": {
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "@typescript-eslint/no-unused-vars": "off"
      }
    },
    // Configuration for Astro
    {
      "files": ["**/*.astro"],
      "plugins": ["@typescript-eslint", "react"],
      "parser": "astro-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "project": "./tsconfig.json",
        "ecmaVersion": "latest",
        "sourceType": "module",
        "extraFileExtensions": [".astro"]
      },
      "rules": {
        "react/jsx-filename-extension": [1, { "extensions": [".astro"] }], // Accept jsx in astro files
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "@typescript-eslint/no-unused-vars": "off"
      },
      "globals": {
        "Astro": "readonly"
      }
    }
  ]
}
